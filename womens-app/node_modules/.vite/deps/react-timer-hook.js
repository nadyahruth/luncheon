import {
  __commonJS,
  require_react
} from "./chunk-I4MZPW7S.js";

// node_modules/react-timer-hook/dist/index.js
var require_dist = __commonJS({
  "node_modules/react-timer-hook/dist/index.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t(require_react()) : "function" == typeof define && define.amd ? define(["react"], t) : "object" == typeof exports ? exports["react-timer-hook"] = t(require_react()) : e["react-timer-hook"] = t(e.react);
    }("undefined" != typeof self ? self : exports, (e) => (() => {
      "use strict";
      var t = { 155: (t2) => {
        t2.exports = e;
      } }, r = {};
      function o(e2) {
        var n2 = r[e2];
        if (void 0 !== n2) return n2.exports;
        var s2 = r[e2] = { exports: {} };
        return t[e2](s2, s2.exports, o), s2.exports;
      }
      o.d = (e2, t2) => {
        for (var r2 in t2) o.o(t2, r2) && !o.o(e2, r2) && Object.defineProperty(e2, r2, { enumerable: true, get: t2[r2] });
      }, o.o = (e2, t2) => Object.prototype.hasOwnProperty.call(e2, t2), o.r = (e2) => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
      };
      var n = {};
      o.r(n), o.d(n, { default: () => f, useStopwatch: () => d, useTime: () => p, useTimer: () => l });
      var s = o(155);
      class i {
        static expiryTimestamp(e2) {
          const t2 = new Date(e2).getTime() > 0;
          return t2 || console.warn("react-timer-hook: { useTimer } Invalid expiryTimestamp settings", e2), t2;
        }
        static onExpire(e2) {
          const t2 = e2 && "function" == typeof e2;
          return e2 && !t2 && console.warn("react-timer-hook: { useTimer } Invalid onExpire settings function", e2), t2;
        }
      }
      class a {
        static getTimeFromSeconds(e2) {
          const t2 = Math.ceil(e2), r2 = Math.floor(t2 / 86400), o2 = Math.floor(t2 % 86400 / 3600), n2 = Math.floor(t2 % 3600 / 60);
          return { totalSeconds: t2, seconds: Math.floor(t2 % 60), minutes: n2, hours: o2, days: r2 };
        }
        static getSecondsFromExpiry(e2, t2) {
          const r2 = e2 - (/* @__PURE__ */ new Date()).getTime();
          if (r2 > 0) {
            const e3 = r2 / 1e3;
            return t2 ? Math.round(e3) : e3;
          }
          return 0;
        }
        static getSecondsFromPrevTime(e2, t2) {
          const r2 = (/* @__PURE__ */ new Date()).getTime() - e2;
          if (r2 > 0) {
            const e3 = r2 / 1e3;
            return t2 ? Math.round(e3) : e3;
          }
          return 0;
        }
        static getSecondsFromTimeNow() {
          const e2 = /* @__PURE__ */ new Date();
          return e2.getTime() / 1e3 - 60 * e2.getTimezoneOffset();
        }
        static getFormattedTimeFromSeconds(e2, t2) {
          const { seconds: r2, minutes: o2, hours: n2 } = a.getTimeFromSeconds(e2);
          let s2 = "", i2 = n2;
          return "12-hour" === t2 && (s2 = n2 >= 12 ? "pm" : "am", i2 = n2 % 12), { seconds: r2, minutes: o2, hours: i2, ampm: s2 };
        }
      }
      function c(e2, t2) {
        const r2 = (0, s.useRef)();
        (0, s.useEffect)(() => {
          r2.current = e2;
        }), (0, s.useEffect)(() => {
          if (!t2) return () => {
          };
          const e3 = setInterval(() => {
            r2.current && r2.current();
          }, t2);
          return () => clearInterval(e3);
        }, [t2]);
      }
      const u = 1e3;
      function m(e2) {
        if (!i.expiryTimestamp(e2)) return null;
        const t2 = a.getSecondsFromExpiry(e2), r2 = Math.floor(1e3 * (t2 - Math.floor(t2)));
        return r2 > 0 ? r2 : u;
      }
      function l() {
        let { expiryTimestamp: e2, onExpire: t2, autoStart: r2 = true } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        const [o2, n2] = (0, s.useState)(e2), [l2, d2] = (0, s.useState)(a.getSecondsFromExpiry(o2)), [p2, f2] = (0, s.useState)(r2), [g, S] = (0, s.useState)(r2), [T, y] = (0, s.useState)(m(o2)), h = (0, s.useCallback)(() => {
          i.onExpire(t2) && t2(), f2(false), y(null);
        }, [t2]), x = (0, s.useCallback)(() => {
          f2(false);
        }, []), v = (0, s.useCallback)(function(e3) {
          let t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          y(m(e3)), S(t3), f2(t3), n2(e3), d2(a.getSecondsFromExpiry(e3));
        }, []), F = (0, s.useCallback)(() => {
          const e3 = /* @__PURE__ */ new Date();
          e3.setMilliseconds(e3.getMilliseconds() + 1e3 * l2), v(e3);
        }, [l2, v]), b = (0, s.useCallback)(() => {
          g ? (d2(a.getSecondsFromExpiry(o2)), f2(true)) : F();
        }, [o2, g, F]);
        return c(() => {
          T !== u && y(u);
          const e3 = a.getSecondsFromExpiry(o2);
          d2(e3), e3 <= 0 && h();
        }, p2 ? T : null), { ...a.getTimeFromSeconds(l2), start: b, pause: x, resume: F, restart: v, isRunning: p2 };
      }
      function d() {
        let { autoStart: e2, offsetTimestamp: t2 } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        const [r2, o2] = (0, s.useState)(a.getSecondsFromExpiry(t2, true) || 0), [n2, i2] = (0, s.useState)(/* @__PURE__ */ new Date()), [u2, m2] = (0, s.useState)(r2 + a.getSecondsFromPrevTime(n2 || 0, true)), [l2, d2] = (0, s.useState)(e2);
        c(() => {
          m2(r2 + a.getSecondsFromPrevTime(n2, true));
        }, l2 ? 1e3 : null);
        const p2 = (0, s.useCallback)(() => {
          const e3 = /* @__PURE__ */ new Date();
          i2(e3), d2(true), m2(r2 + a.getSecondsFromPrevTime(e3, true));
        }, [r2]), f2 = (0, s.useCallback)(() => {
          o2(u2), d2(false);
        }, [u2]), g = (0, s.useCallback)(function() {
          let e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          const r3 = a.getSecondsFromExpiry(e3, true) || 0, n3 = /* @__PURE__ */ new Date();
          i2(n3), o2(r3), d2(t3), m2(r3 + a.getSecondsFromPrevTime(n3, true));
        }, []);
        return { ...a.getTimeFromSeconds(u2), start: p2, pause: f2, reset: g, isRunning: l2 };
      }
      function p() {
        let { format: e2 } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        const [t2, r2] = (0, s.useState)(a.getSecondsFromTimeNow());
        return c(() => {
          r2(a.getSecondsFromTimeNow());
        }, 1e3), { ...a.getFormattedTimeFromSeconds(t2, e2) };
      }
      function f(e2) {
        if ((0, s.useEffect)(() => {
          console.warn("react-timer-hook: default export useTimer is deprecated, use named exports { useTimer, useStopwatch, useTime } instead");
        }, []), e2.expiryTimestamp) {
          const t3 = l(e2);
          return { ...t3, startTimer: t3.start, stopTimer: t3.pause, resetTimer: () => {
          } };
        }
        const t2 = d(e2);
        return { ...t2, startTimer: t2.start, stopTimer: t2.pause, resetTimer: t2.reset };
      }
      return n;
    })());
  }
});
export default require_dist();
//# sourceMappingURL=react-timer-hook.js.map
